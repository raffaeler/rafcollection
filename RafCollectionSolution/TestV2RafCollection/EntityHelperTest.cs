// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
namespace TestV2RafCollection
{
	/// <summary>
	///This is a test class for Vevy.Collections.EntityHelper and is intended
	///to contain all Vevy.Collections.EntityHelper Unit Tests
	///</summary>
	[TestClass()]
	public class EntityHelperTest
	{


		private TestContext testContextInstance;

		/// <summary>
		///Gets or sets the test context which provides
		///information about and functionality for the current test run.
		///</summary>
		public TestContext TestContext
		{
			get
			{
				return testContextInstance;
			}
			set
			{
				testContextInstance = value;
			}
		}
		#region Additional test attributes
		// 
		//You can use the following additional attributes as you write your tests:
		//
		//Use ClassInitialize to run code before running the first test in the class
		//
		//[ClassInitialize()]
		//public static void MyClassInitialize(TestContext testContext)
		//{
		//}
		//
		//Use ClassCleanup to run code after all tests in a class have run
		//
		//[ClassCleanup()]
		//public static void MyClassCleanup()
		//{
		//}
		//
		//Use TestInitialize to run code before running each test
		//
		//[TestInitialize()]
		//public void MyTestInitialize()
		//{
		//}
		//
		//Use TestCleanup to run code after each test has run
		//
		//[TestCleanup()]
		//public void MyTestCleanup()
		//{
		//}
		//
		#endregion


		/// <summary>
		///A test for BeginEdit (object, ref object)
		///</summary>
		[TestMethod()]
		public void BeginEditTest()
		{
			object sender = null; // TODO: Initialize to an appropriate value

			object Clone = null; // TODO: Initialize to an appropriate value
			object Clone_expected = null; // TODO: Initialize to an appropriate value

			Vevy.Collections.EntityHelper.BeginEdit(sender, ref Clone);

			Assert.AreEqual(Clone_expected, Clone, "Clone_BeginEdit_expected was not set correctly.");
			Assert.Inconclusive("A method that does not return a value cannot be verified.");
		}

		/// <summary>
		///A test for CancelEdit (object, ref object)
		///</summary>
		[TestMethod()]
		public void CancelEditTest()
		{
			object sender = null; // TODO: Initialize to an appropriate value

			object Clone = null; // TODO: Initialize to an appropriate value
			object Clone_expected = null; // TODO: Initialize to an appropriate value

			Vevy.Collections.EntityHelper.CancelEdit(sender, ref Clone);

			Assert.AreEqual(Clone_expected, Clone, "Clone_CancelEdit_expected was not set correctly.");
			Assert.Inconclusive("A method that does not return a value cannot be verified.");
		}

		/// <summary>
		///A test for EndEdit (object, ref object)
		///</summary>
		[TestMethod()]
		public void EndEditTest()
		{
			object sender = null; // TODO: Initialize to an appropriate value

			object Clone = null; // TODO: Initialize to an appropriate value
			object Clone_expected = null; // TODO: Initialize to an appropriate value

			Vevy.Collections.EntityHelper.EndEdit(sender, ref Clone);

			Assert.AreEqual(Clone_expected, Clone, "Clone_EndEdit_expected was not set correctly.");
			Assert.Inconclusive("A method that does not return a value cannot be verified.");
		}

		/// <summary>
		///A test for ReflectionClone (object)
		///</summary>
		[TestMethod()]
		public void ReflectionCloneTest()
		{
			object o = null; // TODO: Initialize to an appropriate value

			object expected = null;
			object actual;

			actual = Vevy.Collections.EntityHelper.ReflectionClone(o);

			Assert.AreEqual(expected, actual, "Vevy.Collections.EntityHelper.ReflectionClone did not return the expected value.");
			Assert.Inconclusive("Verify the correctness of this test method.");
		}

		/// <summary>
		///A test for SerializeClone (object)
		///</summary>
		[TestMethod()]
		public void SerializeCloneTest()
		{
			object o = null; // TODO: Initialize to an appropriate value

			object expected = null;
			object actual;

			actual = Vevy.Collections.EntityHelper.SerializeClone(o);

			Assert.AreEqual(expected, actual, "Vevy.Collections.EntityHelper.SerializeClone did not return the expected value.");
			Assert.Inconclusive("Verify the correctness of this test method.");
		}

	}


}
