// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using Vevy.Collections;
namespace TestV2RafCollection
{
	/// <summary>
	///This is a test class for Vevy.Collections.Box&lt;T&gt; and is intended
	///to contain all Vevy.Collections.Box&lt;T&gt; Unit Tests
	///</summary>
	[TestClass()]
	public class BoxTest
	{


		private TestContext testContextInstance;

		/// <summary>
		///Gets or sets the test context which provides
		///information about and functionality for the current test run.
		///</summary>
		public TestContext TestContext
		{
			get
			{
				return testContextInstance;
			}
			set
			{
				testContextInstance = value;
			}
		}
		#region Additional test attributes
		// 
		//You can use the following additional attributes as you write your tests:
		//
		//Use ClassInitialize to run code before running the first test in the class
		//
		//[ClassInitialize()]
		//public static void MyClassInitialize(TestContext testContext)
		//{
		//}
		//
		//Use ClassCleanup to run code after all tests in a class have run
		//
		//[ClassCleanup()]
		//public static void MyClassCleanup()
		//{
		//}
		//
		//Use TestInitialize to run code before running each test
		//
		//[TestInitialize()]
		//public void MyTestInitialize()
		//{
		//}
		//
		//Use TestCleanup to run code after each test has run
		//
		//[TestCleanup()]
		//public void MyTestCleanup()
		//{
		//}
		//
		#endregion


		/// <summary>
		///A test for Box (Storage&lt;T&gt;, bool)
		///</summary>
		[TestMethod()]
		public void ConstructorTest()
		{
			// Vevy.Collections.Storage<T> Storage = null; // TODO: Initialize to an appropriate value
			// 
			// bool Visible = false; // TODO: Initialize to an appropriate value
			// 
			// Box<T> target = new Box<T>(Storage, Visible);
			// 
			// // TODO: Implement code to verify target
			// Assert.Inconclusive("TODO: Implement code to verify target");
			Assert.Inconclusive("Generics testing must be manually provided.");
		}

		/// <summary>
		///A test for Storage
		///</summary>
		[TestMethod()]
		public void StorageTest()
		{
			// Vevy.Collections.Storage<T> Storage = null; // TODO: Initialize to an appropriate value
			// 
			// bool Visible = false; // TODO: Initialize to an appropriate value
			// 
			// Box<T> target = new Box<T>(Storage, Visible);
			// 
			// Vevy.Collections.Storage<T> val = null; // TODO: Assign to an appropriate value for the property
			// 
			// target.Storage = val;
			// 
			// 
			// Assert.AreEqual(val, target.Storage, "Vevy.Collections.Box<T>.Storage was not set correctly.");
			// Assert.Inconclusive("Verify the correctness of this test method.");
			Assert.Inconclusive("Generics testing must be manually provided.");
		}

		/// <summary>
		///A test for Visible
		///</summary>
		[TestMethod()]
		public void VisibleTest()
		{
			// Vevy.Collections.Storage<T> Storage = null; // TODO: Initialize to an appropriate value
			// 
			// bool Visible = false; // TODO: Initialize to an appropriate value
			// 
			// Box<T> target = new Box<T>(Storage, Visible);
			// 
			// bool val = false; // TODO: Assign to an appropriate value for the property
			// 
			// target.Visible = val;
			// 
			// 
			// Assert.AreEqual(val, target.Visible, "Vevy.Collections.Box<T>.Visible was not set correctly.");
			// Assert.Inconclusive("Verify the correctness of this test method.");
			Assert.Inconclusive("Generics testing must be manually provided.");
		}

	}


}
