// ------------------------------------------------------------------------------
//<autogenerated>
//        This code was generated by Microsoft Visual Studio Team System 2005.
//
//        Changes to this file may cause incorrect behavior and will be lost if
//        the code is regenerated.
//</autogenerated>
//------------------------------------------------------------------------------
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace TestV2RafCollection
{
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class BaseAccessor {
    
    protected Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject m_privateObject;
    
    protected BaseAccessor(object target, Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) {
        m_privateObject = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject(target, type);
    }
    
    protected BaseAccessor(Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) : 
            this(null, type) {
    }
    
    internal virtual object Target {
        get {
            return m_privateObject.Target;
        }
    }
    
    public override string ToString() {
        return this.Target.ToString();
    }
    
    public override bool Equals(object obj) {
        if (typeof(BaseAccessor).IsInstanceOfType(obj)) {
            obj = ((BaseAccessor)(obj)).Target;
        }
        return this.Target.Equals(obj);
    }
    
    public override int GetHashCode() {
        return this.Target.GetHashCode();
    }
}


[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class Vevy_Collections_RafCollection<T>_StandardComparisonAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("RafCollection", "Vevy.Collections.RafCollection+StandardComparison");
    
    internal Vevy_Collections_RafCollection<T>_StandardComparisonAccessor(object target) : 
            base(target, m_privateType) {
    }
    
    internal static object CreatePrivate() {
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("RafCollection", "Vevy.Collections.RafCollection+StandardComparison", new object[0]);
        return priv_obj.Target;
    }
}
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class Vevy_Collections_SimpleParser_BooleanExpressionAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("RafCollection", "Vevy.Collections.SimpleParser+BooleanExpression");
    
    internal Vevy_Collections_SimpleParser_BooleanExpressionAccessor(object target) : 
            base(target, m_privateType) {
    }
    
    internal global::Vevy.Collections.SimpleParser.BooleanOperand _Left {
        get {
            global::Vevy.Collections.SimpleParser.BooleanOperand ret = ((global::Vevy.Collections.SimpleParser.BooleanOperand)(m_privateObject.GetField("_Left")));
            return ret;
        }
        set {
            m_privateObject.SetField("_Left", value);
        }
    }
    
    internal global::Vevy.Collections.SimpleParser.BooleanOperand Left {
        get {
            global::Vevy.Collections.SimpleParser.BooleanOperand ret = ((global::Vevy.Collections.SimpleParser.BooleanOperand)(m_privateObject.GetProperty("Left")));
            return ret;
        }
        set {
            m_privateObject.SetProperty("Left", value);
        }
    }
    
    internal global::Vevy.Collections.SimpleParser.BooleanOperand _Right {
        get {
            global::Vevy.Collections.SimpleParser.BooleanOperand ret = ((global::Vevy.Collections.SimpleParser.BooleanOperand)(m_privateObject.GetField("_Right")));
            return ret;
        }
        set {
            m_privateObject.SetField("_Right", value);
        }
    }
    
    internal global::Vevy.Collections.SimpleParser.BooleanOperand Right {
        get {
            global::Vevy.Collections.SimpleParser.BooleanOperand ret = ((global::Vevy.Collections.SimpleParser.BooleanOperand)(m_privateObject.GetProperty("Right")));
            return ret;
        }
        set {
            m_privateObject.SetProperty("Right", value);
        }
    }
    
    internal global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor _BooleanOperator {
        get {
            object _ret_val = m_privateObject.GetField("_BooleanOperator");
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor _ret = null;
            if ((_ret_val != null)) {
                _ret = new global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor(_ret_val);
            }
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor ret = _ret;
            return ret;
        }
        set {
            m_privateObject.SetField("_BooleanOperator", value);
        }
    }
    
    internal global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor BooleanOperator {
        get {
            object _ret_val = m_privateObject.GetProperty("BooleanOperator");
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor _ret = null;
            if ((_ret_val != null)) {
                _ret = new global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor(_ret_val);
            }
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor ret = _ret;
            return ret;
        }
        set {
            m_privateObject.SetProperty("BooleanOperator", value);
        }
    }
    
    internal static global::Vevy.Collections.SimpleParser.BooleanOperand CreatePrivate(string Left, global::Vevy.Collections.SimpleParser.BooleanOperand Right) {
        object[] args = new object[] {
                Left,
                Right};
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("RafCollection", "Vevy.Collections.SimpleParser+BooleanExpression", new System.Type[] {
                    typeof(string),
                    typeof(global::Vevy.Collections.SimpleParser.BooleanOperand)}, args);
        return ((global::Vevy.Collections.SimpleParser.BooleanOperand)(priv_obj.Target));
    }
    
    internal static global::Vevy.Collections.SimpleParser.BooleanOperand CreatePrivate(global::Vevy.Collections.SimpleParser.BooleanOperand Left, global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor Operator, global::Vevy.Collections.SimpleParser.BooleanOperand Right) {
        object Operator_val_target = null;
        if ((Operator != null)) {
            Operator_val_target = Operator.Target;
        }
        object[] args = new object[] {
                Left,
                Operator_val_target,
                Right};
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType target = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("RafCollection", "Vevy.Collections.SimpleParser+BooleanOperatorType");
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("RafCollection", "Vevy.Collections.SimpleParser+BooleanExpression", new System.Type[] {
                    typeof(global::Vevy.Collections.SimpleParser.BooleanOperand),
                    target.ReferencedType,
                    typeof(global::Vevy.Collections.SimpleParser.BooleanOperand)}, args);
        return ((global::Vevy.Collections.SimpleParser.BooleanOperand)(priv_obj.Target));
    }
    
    internal static global::Vevy.Collections.SimpleParser.BooleanOperand CreatePrivate(global::Vevy.Collections.SimpleParser.BooleanOperand Left, string Operator, global::Vevy.Collections.SimpleParser.BooleanOperand Right) {
        object[] args = new object[] {
                Left,
                Operator,
                Right};
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("RafCollection", "Vevy.Collections.SimpleParser+BooleanExpression", new System.Type[] {
                    typeof(global::Vevy.Collections.SimpleParser.BooleanOperand),
                    typeof(string),
                    typeof(global::Vevy.Collections.SimpleParser.BooleanOperand)}, args);
        return ((global::Vevy.Collections.SimpleParser.BooleanOperand)(priv_obj.Target));
    }
    
    internal static global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor GetBooleanOperator(string OperatorValue) {
        object[] args = new object[] {
                OperatorValue};
        object _ret_val = m_privateType.InvokeStatic("GetBooleanOperator", new System.Type[] {
                    typeof(string)}, args);
        global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor _ret = null;
        if ((_ret_val != null)) {
            _ret = new global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor(_ret_val);
        }
        global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor ret = _ret;
        return ret;
    }
    
    internal bool Eval(object obj) {
        object[] args = new object[] {
                obj};
        bool ret = ((bool)(m_privateObject.Invoke("Eval", new System.Type[] {
                    typeof(object)}, args)));
        return ret;
    }
    
    public override string ToString() {
        object[] args = new object[0];
        string ret = ((string)(m_privateObject.Invoke("ToString", new System.Type[0], args)));
        return ret;
    }
}
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("RafCollection", "Vevy.Collections.SimpleParser+BooleanOperatorType");
    
    internal Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor(object target) : 
            base(target, m_privateType) {
    }
    
    internal static global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor And {
        get {
            object _ret_val = m_privateType.GetStaticField("And");
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor _ret = null;
            if ((_ret_val != null)) {
                _ret = new global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor(_ret_val);
            }
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor ret = _ret;
            return ret;
        }
    }
    
    internal static global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor Or {
        get {
            object _ret_val = m_privateType.GetStaticField("Or");
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor _ret = null;
            if ((_ret_val != null)) {
                _ret = new global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor(_ret_val);
            }
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_BooleanOperatorTypeAccessor ret = _ret;
            return ret;
        }
    }
}
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class Vevy_Collections_CollectionUtilitiesAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("RafCollection", "Vevy.Collections.CollectionUtilities");
    
    internal Vevy_Collections_CollectionUtilitiesAccessor() : 
            base(m_privateType) {
    }
    
    internal static bool TypeImplementInterface(global::System.Type TypeToEvaluate, string InterfaceName) {
        object[] args = new object[] {
                TypeToEvaluate,
                InterfaceName};
        bool ret = ((bool)(m_privateType.InvokeStatic("TypeImplementInterface", new System.Type[] {
                    typeof(global::System.Type),
                    typeof(string)}, args)));
        return ret;
    }
    
    internal static object CreatePrivate() {
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("RafCollection", "Vevy.Collections.CollectionUtilities", new object[0]);
        return priv_obj.Target;
    }
}
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class Vevy_Collections_SimpleParser_ElementarExpressionStringAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("RafCollection", "Vevy.Collections.SimpleParser+ElementarExpressionString");
    
    internal Vevy_Collections_SimpleParser_ElementarExpressionStringAccessor(object target) : 
            base(target, m_privateType) {
    }
    
    internal global::System.Text.StringBuilder _Expression {
        get {
            global::System.Text.StringBuilder ret = ((global::System.Text.StringBuilder)(m_privateObject.GetField("_Expression")));
            return ret;
        }
        set {
            m_privateObject.SetField("_Expression", value);
        }
    }
    
    internal string Expression {
        get {
            string ret = ((string)(m_privateObject.GetProperty("Expression")));
            return ret;
        }
        set {
            m_privateObject.SetProperty("Expression", value);
        }
    }
    
    internal static object CreatePrivate() {
        object[] args = new object[0];
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("RafCollection", "Vevy.Collections.SimpleParser+ElementarExpressionString", new System.Type[0], args);
        return priv_obj.Target;
    }
    
    internal static object CreatePrivate(string Expression) {
        object[] args = new object[] {
                Expression};
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("RafCollection", "Vevy.Collections.SimpleParser+ElementarExpressionString", new System.Type[] {
                    typeof(string)}, args);
        return priv_obj.Target;
    }
    
    internal void Append(char c) {
        object[] args = new object[] {
                c};
        m_privateObject.Invoke("Append", new System.Type[] {
                    typeof(char)}, args);
    }
    
    internal void Append(string s) {
        object[] args = new object[] {
                s};
        m_privateObject.Invoke("Append", new System.Type[] {
                    typeof(string)}, args);
    }
    
    public override string ToString() {
        object[] args = new object[0];
        string ret = ((string)(m_privateObject.Invoke("ToString", new System.Type[0], args)));
        return ret;
    }
}
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class Vevy_Collections_SimpleParser_SimpleExpressionAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("RafCollection", "Vevy.Collections.SimpleParser+SimpleExpression");
    
    internal Vevy_Collections_SimpleParser_SimpleExpressionAccessor(object target) : 
            base(target, m_privateType) {
    }
    
    internal string _Property {
        get {
            string ret = ((string)(m_privateObject.GetField("_Property")));
            return ret;
        }
        set {
            m_privateObject.SetField("_Property", value);
        }
    }
    
    internal string Property {
        get {
            string ret = ((string)(m_privateObject.GetProperty("Property")));
            return ret;
        }
        set {
            m_privateObject.SetProperty("Property", value);
        }
    }
    
    internal global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor _Operator {
        get {
            object _ret_val = m_privateObject.GetField("_Operator");
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor _ret = null;
            if ((_ret_val != null)) {
                _ret = new global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor(_ret_val);
            }
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor ret = _ret;
            return ret;
        }
        set {
            m_privateObject.SetField("_Operator", value);
        }
    }
    
    internal global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor Operator {
        get {
            object _ret_val = m_privateObject.GetProperty("Operator");
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor _ret = null;
            if ((_ret_val != null)) {
                _ret = new global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor(_ret_val);
            }
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor ret = _ret;
            return ret;
        }
        set {
            m_privateObject.SetProperty("Operator", value);
        }
    }
    
    internal object _Value {
        get {
            object ret = ((object)(m_privateObject.GetField("_Value")));
            return ret;
        }
        set {
            m_privateObject.SetField("_Value", value);
        }
    }
    
    internal object Value {
        get {
            object ret = ((object)(m_privateObject.GetProperty("Value")));
            return ret;
        }
        set {
            m_privateObject.SetProperty("Value", value);
        }
    }
    
    internal static global::Vevy.Collections.SimpleParser.BooleanOperand CreatePrivate(string Property, global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor Operator, object Value) {
        object Operator_val_target = null;
        if ((Operator != null)) {
            Operator_val_target = Operator.Target;
        }
        object[] args = new object[] {
                Property,
                Operator_val_target,
                Value};
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType target = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("RafCollection", "Vevy.Collections.SimpleParser+SimpleOperatorType");
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("RafCollection", "Vevy.Collections.SimpleParser+SimpleExpression", new System.Type[] {
                    typeof(string),
                    target.ReferencedType,
                    typeof(object)}, args);
        return ((global::Vevy.Collections.SimpleParser.BooleanOperand)(priv_obj.Target));
    }
    
    internal static global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor GetExpressionOperator(string str) {
        object[] args = new object[] {
                str};
        object _ret_val = m_privateType.InvokeStatic("GetExpressionOperator", new System.Type[] {
                    typeof(string)}, args);
        global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor _ret = null;
        if ((_ret_val != null)) {
            _ret = new global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor(_ret_val);
        }
        global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor ret = _ret;
        return ret;
    }
    
    internal bool Eval(object obj) {
        object[] args = new object[] {
                obj};
        bool ret = ((bool)(m_privateObject.Invoke("Eval", new System.Type[] {
                    typeof(object)}, args)));
        return ret;
    }
    
    public override string ToString() {
        object[] args = new object[0];
        string ret = ((string)(m_privateObject.Invoke("ToString", new System.Type[0], args)));
        return ret;
    }
}
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("RafCollection", "Vevy.Collections.SimpleParser+SimpleOperatorType");
    
    internal Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor(object target) : 
            base(target, m_privateType) {
    }
    
    internal static global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor Equal {
        get {
            object _ret_val = m_privateType.GetStaticField("Equal");
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor _ret = null;
            if ((_ret_val != null)) {
                _ret = new global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor(_ret_val);
            }
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor ret = _ret;
            return ret;
        }
    }
    
    internal static global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor LesserEqual {
        get {
            object _ret_val = m_privateType.GetStaticField("LesserEqual");
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor _ret = null;
            if ((_ret_val != null)) {
                _ret = new global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor(_ret_val);
            }
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor ret = _ret;
            return ret;
        }
    }
    
    internal static global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor Lesser {
        get {
            object _ret_val = m_privateType.GetStaticField("Lesser");
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor _ret = null;
            if ((_ret_val != null)) {
                _ret = new global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor(_ret_val);
            }
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor ret = _ret;
            return ret;
        }
    }
    
    internal static global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor Greater {
        get {
            object _ret_val = m_privateType.GetStaticField("Greater");
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor _ret = null;
            if ((_ret_val != null)) {
                _ret = new global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor(_ret_val);
            }
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor ret = _ret;
            return ret;
        }
    }
    
    internal static global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor GreaterEqual {
        get {
            object _ret_val = m_privateType.GetStaticField("GreaterEqual");
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor _ret = null;
            if ((_ret_val != null)) {
                _ret = new global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor(_ret_val);
            }
            global::TestV2RafCollection.Vevy_Collections_SimpleParser_SimpleOperatorTypeAccessor ret = _ret;
            return ret;
        }
    }
}
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class Vevy_Collections_SimpleParserAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::Vevy.Collections.SimpleParser));
    
    internal Vevy_Collections_SimpleParserAccessor(global::Vevy.Collections.SimpleParser target) : 
            base(target, m_privateType) {
    }
    
    internal global::Vevy.Collections.SimpleParser.BooleanOperand Build(global::Vevy.Collections.SimpleParser.BooleanOperand ParsedExp, string StringExp) {
        object[] args = new object[] {
                ParsedExp,
                StringExp};
        global::Vevy.Collections.SimpleParser.BooleanOperand ret = ((global::Vevy.Collections.SimpleParser.BooleanOperand)(m_privateObject.Invoke("Build", new System.Type[] {
                    typeof(global::Vevy.Collections.SimpleParser.BooleanOperand),
                    typeof(string)}, args)));
        return ret;
    }
}
}
